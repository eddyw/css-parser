/**
 * Valid numeric values
 */
export const arrInt = [
	'0',
	'1',
	'+1',
	'+12',
	'-1',
	'-12',
	'1234567890',
	'-1234567890',
	'+1234567890',
	'123456789012345678901234567890',
	'-123456789012345678901234567890',
	'+123456789012345678901234567890',
]
export const arrDbl = [
	'.1',
	'+.1',
	'-.1',
	'1.2',
	'+1.2',
	'-1.2',
	'.1e1',
	'+.1e1',
	'-.1e1',
	'1.2e1',
	'+1.2e1',
	'-1.2e1',
	'.1e+1',
	'+.1e+1',
	'-.1e+1',
	'1.2e+1',
	'+1.2e+1',
	'-1.2e+1',
	'.1e-1',
	'+.1e-1',
	'-.1e-1',
	'1.2e-1',
	'+1.2e-1',
	'-1.2e-1',
	'.12',
	'+.12',
	'-.12',
	'12.2',
	'+12.2',
	'-12.2',
	'.12e1',
	'+.12e1',
	'-.12e1',
	'12.2e1',
	'+12.2e1',
	'-12.2e1',
	'.12e+1',
	'+.12e+1',
	'-.12e+1',
	'12.2e+1',
	'+12.2e+1',
	'-12.2e+1',
	'.12e-1',
	'+.12e-1',
	'-.12e-1',
	'12.2e-1',
	'+12.2e-1',
	'-12.2e-1',
	'.123',
	'+.123',
	'-.123',
	'12.23',
	'+12.23',
	'-12.23',
	'.123e1',
	'+.123e1',
	'-.123e1',
	'12.23e1',
	'+12.23e1',
	'-12.23e1',
	'.123e+1',
	'+.123e+1',
	'-.123e+1',
	'12.23e+1',
	'+12.23e+1',
	'-12.23e+1',
	'.123e-1',
	'+.123e-1',
	'-.123e-1',
	'12.23e-1',
	'+12.23e-1',
	'-12.23e-1',
	'.1234',
	'+.1234',
	'-.1234',
	'12.234',
	'+12.234',
	'-12.234',
	'.123e14',
	'+.123e14',
	'-.123e14',
	'12.23e14',
	'+12.23e14',
	'-12.23e14',
	'.123e+14',
	'+.123e+14',
	'-.123e+14',
	'12.23e+14',
	'+12.23e+14',
	'-12.23e+14',
	'.123e-14',
	'+.123e-14',
	'-.123e-14',
	'12.23e-14',
	'+12.23e-14',
	'-12.23e-14',
]

/**
 * Valid escaped code points
 * @see https://www.w3.org/International/questions/qa-escapes
 */
export const arrEscaped = [
	'\\E',
	'\\E9motion',
	'\\E9 dition',
	'\\0000E9dition',
	'\\31 23',
	'\\13322\\13171\\13001',
	'\\13322 \\13171 \\13001',
	'\\013322\\013171\\013001',
	'\\013322 \\013171 \\013001',
	'\\26 B',
	'\\000026B',
]

/**
 * Valid strings
 */
export const arrStrings = [
	`"Hello World!!!"`,
	`"Hello \\57orld!!!"`,
	`"Hello \\57 orld!!!"`,
	`"Hello World\\21"`,
	`'Hello World!!!'`,
	`'Hello \\57orld!!!'`,
	`'Hello \\57 orld!!!'`,
	`'Hello World\\21'`,
	`"Hello \\\n World!!!"`, // Escaped new line « U+005C REVERSE SOLIDUS (\) + Newline »
	`"Hello \\\nWorld!!!"`, // Escaped new line « U+005C REVERSE SOLIDUS (\) + Newline »
	`'Hello \\\n World!!!'`, // Escaped new line « U+005C REVERSE SOLIDUS (\) + Newline »
	`'Hello \\\nWorld!!!'`, // Escaped new line « U+005C REVERSE SOLIDUS (\) + Newline »
	`""`,
	`"/*"`,
	`" "`,
	`''`,
	`'/*'`,
	`' '`,
	`"'"`,
	`'"'`,
	`"Hello \\"world\\""`, // Escaped « U+0022 QUOTATION MARK (") | U+0027 APOSTROPHE (') » within string
	`'Hello \\"world\\"'`, // Escaped « U+0022 QUOTATION MARK (") | U+0027 APOSTROPHE (') » within string
	`"Hello \\'world\\'"`, // Escaped « U+0022 QUOTATION MARK (") | U+0027 APOSTROPHE (') » within string
	`'Hello \\'world\\''`, // Escaped « U+0022 QUOTATION MARK (") | U+0027 APOSTROPHE (') » within string
]

/**
 * Valid whitespace
 */
export const arrWhitespace = [
	'\t',
	'\n',
	' ',
	'\t\t',
	'\n\n',
	'  ',
	'\t\t\t',
	'\n\n\n',
	'   ',
	'\n\t ',
	'\n\n\t\t  ',
	'\n\n\n\t\t\t   ',
	' \n\t\n \t\t\n\n  \t',
]

/**
 * Valid comments
 */
export const arrComment = [
	`/**/`,
	`/* */`,
	`/*\n*/`,
	`/*\t*/`,
	`/*comment*/`,
	`/* comment*/`,
	`/*comment */`,
	`/* comment */`,
	`/*a\ncomment*/`,
	`/* a\n comment*/`,
	`/*\ncomment */`,
	`/* \ncomment */`,
	`/* a\ncomment\n */`,
	`/* a\ncomment\n*/`,
]

/**
 * Valid hash tokens
 */
export const arrIdentifiers = [
	'a',
	'aa',
	'aaa',
	'solid',
	'border',
	'-webkit-transition',
	'-moz-transition',
	'-ms-transition',
	'-o-transition',
	'transition',
	'-custom-property',
	'--custom-property',
	'---custom-property',
	'----custom-property',
	'a1',
	'a123',
	'-a123',
	'--a123',
	'---a123',
	...arrEscaped,
	...arrEscaped.map(e => `-${e}`),
	...arrEscaped.map(e => `--${e}`),
	...arrEscaped.map(e => `---${e}`),
]

/**
 * Valid <url-token>
 */
export const arrUrlToken = [
	'url()',
	'url(/something/here)',
	'url( /something/here)',
	'url(  /something/here)',
	'url(   /something/here)',
	'url(/something/here )',
	'url( /something/here  )',
	'url(  /something/here   )',
	'url(   /something/here   )',
	'url(   /something/here   )',
	'url(/something/h\\Ere )',
	'url( /something/h\\Ere  )',
	'url(  /something/h\\Ere   )',
	'url(   /something/h\\Ere   )',
	'url(   /something/h\\Ere   )',
	'url(/something/h\\Ere\\E )',
	'url( /something/h\\Ere\\E  )',
	'url(  /something/h\\Ere\\E  )',
	'url(   /something/h\\Ere\\E  )',
	'url(   /something/h\\Ere\\E  )',
	'uRl(/something/here)',
	'uRl( /something/here)',
	'uRl(  /something/here)',
	'uRl(   /something/here)',
	'uRl(/something/here )',
	'uRl( /something/here  )',
	'uRl(  /something/here   )',
	'uRl(   /something/here   )',
	'uRl(   /something/here   )',
	'uRl(/something/h\\Ere )',
	'uRl( /something/h\\Ere  )',
	'uRl(  /something/h\\Ere   )',
	'uRl(   /something/h\\Ere   )',
	'uRl(   /something/h\\Ere   )',
	'uRl(/something/h\\Ere\\E )',
	'uRl( /something/h\\Ere\\E  )',
	'uRl(  /something/h\\Ere\\E  )',
	'uRl(   /something/h\\Ere\\E  )',
	'uRl(   /something/h\\Ere\\E  )',
	'URL(/something/here)',
	'URL( /something/here)',
	'URL(  /something/here)',
	'URL(   /something/here)',
	'URL(/something/here )',
	'URL( /something/here  )',
	'URL(  /something/here   )',
	'URL(   /something/here   )',
	'URL(   /something/here   )',
	'URL(/something/h\\Ere )',
	'URL( /something/h\\Ere  )',
	'URL(  /something/h\\Ere   )',
	'URL(   /something/h\\Ere   )',
	'URL(   /something/h\\Ere   )',
	'URL(/something/h\\Ere\\E )',
	'URL( /something/h\\Ere\\E  )',
	'URL(  /something/h\\Ere\\E  )',
	'URL(   /something/h\\Ere\\E  )',
	'URL(   /something/h\\Ere\\E  )',
	...arrEscaped.map(e => `url(${e})`),
]

/**
 * <bad-url-token> when:
 * 		U+0022 QUOTATION MARK (")
 * 		U+0027 APOSTROPHE (')
 * 		U+0028 LEFT PARENTHESIS (()
 * 		non-printable code point
 */
export const arrBadUrlNonPrintable = [
	`url(/some/"thing)`,
	`url(/some/" thing)`,
	`url(/some/thing")`,
	`url(/some/thing" )`,
	`url(/some/'thing)`,
	`url(/some/' thing)`,
	`url(/some/thing')`,
	`url(/some/thing' )`,
	`url(/some/(thing)`,
	`url(/some/( thing)`,
	`url(/some/thing()`,
	`url(/some/thing( )`,
	`url(/some/${String.fromCodePoint(0x000b, 0x000e, 0x001f)})`,
	`url(${String.fromCodePoint(0x000b, 0x000e, 0x001f)}.png)`,
	`url(${String.fromCodePoint(0x000b, 0x000e, 0x001f)}/thing.png)`,
]
